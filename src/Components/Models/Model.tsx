/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Lo√Øc Norgeot (https://sketchfab.com/norgeotloic)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/mosquito-in-amber-53a61d58c09b4d2ab30e269aa3e22078
title: Mosquito in amber
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		['5_amber_lr_PBR_0']: THREE.Mesh
		['6_eclats_eclats_0']: THREE.Mesh
		['2_mosquito_lr_originalo_material_0_0']: THREE.Mesh
	}
	materials: {
		material: THREE.MeshPhongMaterial
		eclats: THREE.MeshPhongMaterial
		['original.o_material_0']: THREE.MeshPhongMaterial
	}
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
	const group = useRef<THREE.Group>(null!);
	const { nodes, materials } = useGLTF('/assets/model/scene.gltf') as GLTFResult;

	return (
		<group ref={group} {...props} dispose={null}>
			<group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Sketchfab_model' }}>
				<group name="0a89b95064be46e6943aaad2c83817a2fbx" rotation={[Math.PI / 2, 0, 0]}
				       userData={{ name: '0a89b95064be46e6943aaad2c83817a2.fbx' }}>
					<group name="RootNode" userData={{ name: 'RootNode' }}>
						<group name="5_amber_lr" rotation={[-Math.PI / 2, 0, 0]} scale={100}
						       userData={{ name: '5_amber_lr' }}>
							<mesh name="5_amber_lr_PBR_0" castShadow receiveShadow
							      geometry={nodes['5_amber_lr_PBR_0'].geometry} material={materials.material}
							      userData={{ name: '5_amber_lr_PBR_0' }} />
						</group>
						<group name="6_eclats" rotation={[-Math.PI / 2, 0, 0]} scale={100}
						       userData={{ name: '6_eclats' }}>
							<mesh name="6_eclats_eclats_0" castShadow receiveShadow
							      geometry={nodes['6_eclats_eclats_0'].geometry} material={materials.eclats}
							      userData={{ name: '6_eclats_eclats_0' }} />
						</group>
						<group name="2_mosquito_lr" rotation={[-Math.PI / 2, 0, 0]} scale={100}
						       userData={{ name: '2_mosquito_lr' }}>
							<mesh name="2_mosquito_lr_originalo_material_0_0" castShadow receiveShadow
							      geometry={nodes['2_mosquito_lr_originalo_material_0_0'].geometry}
							      material={materials['original.o_material_0']}
							      userData={{ name: '2_mosquito_lr_original.o_material_0_0' }} />
						</group>
					</group>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload('/assets/model/scene.gltf');
