/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    cartridge_low_mesh: THREE.Mesh
    cartridge_low_mesh_1: THREE.Mesh
    cartridge_low_mesh_2: THREE.Mesh
    cartridge_low_mesh_3: THREE.Mesh
    cartridge_low_mesh_4: THREE.Mesh
  }
  materials: {
    main: THREE.MeshStandardMaterial
    wyswietlacz: THREE.MeshStandardMaterial
    szklo: THREE.MeshStandardMaterial
    ['zlacze szklo']: THREE.MeshStandardMaterial
    ['hash hill']: THREE.MeshStandardMaterial
  }
}

/**
 * NOTE: For testing purposes only
 * @param props
 * @constructor
 */
export default function CartridgeRainbow({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null!)
  const { nodes, materials } = useGLTF('/assets/models/teczowy/cartridge teczowy.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="cartridge_low" position={[-0.02, 0.1, 0.04]} userData={{ name: 'cartridge low' }}>
        <mesh name="cartridge_low_mesh" castShadow receiveShadow geometry={nodes.cartridge_low_mesh.geometry} material={materials.main} />
        <mesh name="cartridge_low_mesh_1" castShadow receiveShadow geometry={nodes.cartridge_low_mesh_1.geometry} material={materials.wyswietlacz} />
        <mesh name="cartridge_low_mesh_2" castShadow receiveShadow geometry={nodes.cartridge_low_mesh_2.geometry} material={materials.szklo} />
        <mesh name="cartridge_low_mesh_3" castShadow receiveShadow geometry={nodes.cartridge_low_mesh_3.geometry} material={materials['zlacze szklo']} />
        <mesh name="cartridge_low_mesh_4" castShadow receiveShadow geometry={nodes.cartridge_low_mesh_4.geometry} material={materials['hash hill']} />
      </group>
    </group>
  )
}

useGLTF.preload('/assets/models/teczowy/cartridge teczowy.gltf')
